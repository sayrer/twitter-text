## 0.12.2

     * Fixed version detection with lockfile v2. https://github.com/eqrion/cbindgen/pull/446
     * Added support for export_name on functions. https://github.com/eqrion/cbindgen/pull/447

## 0.12.1

     * Added support for #[repr*64)] on enums. https://github.com/eqrion/cbindgen/pull/441
     * Added support to generate plain enums instead of enum classes for C++. https://github.com/eqrion/cbindgen/pull/443
     * Fixed dependency resolution with lockfile v2. https://github.com/eqrion/cbindgen/pull/438

## 0.12.0

     * Added support for #[repr(align)] and #[repr(packed)] on structs and unions. https://github.com/eqrion/cbindgen/pull/431
     * Added support to generate copy-assignment operators for enums. https://github.com/eqrion/cbindgen/pull/434

## 0.11.1

     * More binary operators and expressions are supported. https://github.com/eqrion/cbindgen/pull/425
     * More built-in bitflags operators. https://github.com/eqrion/cbindgen/pull/426

## 0.11.0

     * Made rust char map to uint32_t. https://github.com/eqrion/cbindgen/pull/424

## 0.10.1

     * Improved error message for missing config file. https://github.com/eqrion/cbindgen/pull/422
     * Add missing header for char32_t. https://github.com/eqrion/cbindgen/pull/414

## 0.10.0

     * Initialize struct literal with list-initializer for C++11 standard. https://github.com/eqrion/cbindgen/pull/401
     * Surround namespace with __cplusplus ifdef in cpp_compat mode. https://github.com/eqrion/cbindgen/pull/407
     * Add support for --quiet flag. https://github.com/eqrion/cbindgen/pull/400
     * Map char to char32_t. https://github.com/eqrion/cbindgen/pull/396
     * Improve binding_crate_ref() error message. https://github.com/eqrion/cbindgen/pull/395
     * avoid prematurely returning during expansion. https://github.com/eqrion/cbindgen/pull/389
     * Add support for adding "using namespace" statements. https://github.com/eqrion/cbindgen/pull/387

## 0.9.1

     * Various improvements to comment output. https://github.com/eqrion/cbindgen/pull/370 / https://github.com/eqrion/cbindgen/pull/375.
     * Fixed expand when ran from build.rs. https://github.com/eqrion/cbindgen/pull/371
     * More debugging output for expansion. https://github.com/eqrion/cbindgen/pull/383
     * New option to add a default private constructor in C++ tagged enums. https://github.com/eqrion/cbindgen/pull/377
     * Syn and related dependencies updated to 1.0. https://github.com/eqrion/cbindgen/pull/379

## 0.9.0

     * Support to generate C headers with C++ compatibility. https://github.com/eqrion/cbindgen/pull/349
     * Fix include guard generation when no_includes is set. https://github.com/eqrion/cbindgen/pull/352
     * Fix crate parsing order so that types from the binding crate are preferred in presence of conflicting names. https://github.com/eqrion/cbindgen/pull/355
     * Add extra_bindings option to generate bindings for dependencies. https://github.com/eqrion/cbindgen/pull/362
     * Clap dependency is optional now so it's feasible to avoid building it if cbindgen is used as a library. https://github.com/eqrion/cbindgen/pull/363

## 0.8.7

     * Require C++11 to run the test-suite (#341, test-only)
     * Improve mangling error message (#340)
     * Add the ability to automatically derive copy-constructors for tagged enums (#339)
     * Use placement new for constructing in tagged unions' helper methods (#333)

## 0.8.6

    * Fixed a panic when missing a lock file

## 0.8.5

    * Improved support for Rust 2018 modules
    * Add possibility to autogenerate tagged union destructors

## 0.8.4

    * Support for package renaming in Cargo.toml
    * Improved error messages for |cargo metadata| failures
    * Replaced 'test.py' harness with |cargo test|
    * Char constants will now be escaped properly
    * Visibility of constants will now be respected
    * Added a C99 doc comment style

## 0.8.2

     * Improvements to bitflags parsing

## 0.8.1

     * Support for manual parsing and expanding of bitflags macros
     * Support for optional tagged enum casts with asserts

## 0.8.0

    * support for 'includes' without default includes
    * removed dependency on ancient serde_derive!

## 0.7.1

    * Fix for crash when unwrapping unsupported type with associated constants

## 0.7.0

    * support for libc::ssize_t
    * fixed some warnings on nightly
    * fix for transparent associated constants
    * switched more API's to use AsRef<Path>
    * impl std::error::Error for cbindgen::Error
    * now support putting user-defined content in item bodies

## 0.6.8

    * ptrdiff_t is now a recognized primitive type
    * named function type arguments are now propagated
    * fixes for struct literals in constants
    * reserved C/C++ keywords are now escaped automatically
    * negative enum discriminants are now supported
    * fix for prefixing and formatting variant names
    * fix for snake_case formatter
    * syn update
    * doxygen style comments are now output by default
    * VaList is now a recognized primitive type
    * fix for comment processing
    * constant is propagated into array types
    * references are now supported in IR, and used for some helper method generation
    * assignment helper functions will generate array copies if necessary
